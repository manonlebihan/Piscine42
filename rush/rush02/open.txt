OPEN 
----
----

INCLUDE :

#include <fcntl.h> --> pour les flags
/* Not technically required, but needed on some UNIX distributions */
#include <sys/types.h>
#include <sys/stat.h>

FLAGS :

O_RDONLY	Open the file so that it is read only.
O_WRONLY	Open the file so that it is write only.
O_RDWR		Open the file so that it can be read from and written to.
O_APPEND	Append new information to the end of the file.
O_TRUNC		Initially clear all data from the file.
O_CREAT		If the file does not exist, create it. If the O_CREAT option is used, then you must include the third parameter.
O_EXCL		Combined with the O_CREAT option, it ensures that the caller must create the file. If the file already exists, the call will fail.

EXAMPLE :
 
int var = open("testfile.txt", O_WRONLY | O_APPEND);

RETURNS :

If the function is successful it shall open the file and return a non-negative integer representing the lowest numbered unused file descriptor. Otherwise, -1 is returned. No files shall be created or modified if the function returns -1.

READ
----
----

INCLUDE :

#include <unistd.h> (same as write function)

EXAMPLE :

int var = read(0, data, 128);


int fd: The file descriptor of the file from where the information is to be read. We could either be using a file descriptor acquired via an open system call, or we could just use 0, 1, or 2 referring to typical input, regular output, or regular error, respectively.

Void *buf: The buffer or character array in which the read data should be saved and kept.

Size_t nbyte: The number of bytes that needed to be read from the document before truncating. All information can be stored in the buffer if the information to be read is shorter than nbytes.

RETURNS :

If the function is successful it will read the file 
